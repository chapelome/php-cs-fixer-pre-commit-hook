#!/bin/sh
#
# == Installation
#
# Create a Git hooks directory:
#
#   mkdir ~/.githooks
#
# Download the `pre-commit` hook to:
#
#   ~/.githooks/pre-commit
#
# Make sure the file is executable:
#
#   chmod 744 ~/.githooks/pre-commit
#
# Configure Git to use the hooks:
#
#   git config --global core.hooksPath ~/.githooks

set -e

unset CDPATH

IFS='
'

php_cs_fixer_cfg() {
    for candidate in .php-cs-fixer.php .php-cs-fixer.dist.php .php_cs .php_cs.dist; do
        if test -f "$1/$candidate"; then
            echo "$1/$candidate"
            return
        fi
    done
}

run_php_cs_fixer() {
    php_cs_fixer_bin=./vendor/bin/php-cs-fixer
    if test ! -f "$php_cs_fixer_bin"; then
        return
    fi

    php_cs_fixer_cfg="$(php_cs_fixer_cfg .)"
    if test -z "$php_cs_fixer_cfg"; then
        return
    fi

    # Only do a full check if the PHP Coding Standards fixer configuration file
    # or the Composer dependencies lock file has changed, otherwise do a check
    # only for files that have changed since the last commit.
    changed_files=$(git diff --staged --name-only --diff-filter=ACMRTUXB)

    if ! echo "${changed_files}" | grep -qE "^(laravel/)?(\\.php-cs-fixer(\\.dist)?|composer\\.lock)$"; then
        extra_args=$(printf -- '--path-mode=intersection\n--\n%s' "${changed_files}")
    else
        extra_args=''
    fi

    rerun_with_details() {
        echo >&2 "\033[0;33mCoding guidelines pre-commit check failed.\033[1;0m"
        echo >&2 "\033[0;33mRunning check again in verbose mode ...\033[1;0m"

        "$php_cs_fixer_bin" fix --config="$php_cs_fixer_cfg"\
            -vvv \
            --diff \
            --dry-run \
            --stop-on-violation \
            --using-cache=no \
            ${extra_args}

        exit 1
    }

    # PHP Coding Standards Fixer is run quietly. If there are errors it is run
    # again in verbose mode to provide more information about which rules and
    # which files are failing the check.
    "$php_cs_fixer_bin" fix \
        --config="$php_cs_fixer_cfg" \
        -q \
        --dry-run \
        --stop-on-violation \
        --using-cache=no \
        ${extra_args} || rerun_with_details
}

run_php_cs_fixer
