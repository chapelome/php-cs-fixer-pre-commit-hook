#!/bin/sh
#
# Installation
# ------------
#
# Create a Git hooks directory:
#
#   mkdir ~/.githooks
#
# Download the `pre-commit` hook to:
#
#   ~/.githooks/pre-commit
#
# Make sure the file is executable:
#
#   chmod 744 ~/.githooks/pre-commit
#
# Configure Git to use the hooks:
#
#   git config --global core.hooksPath ~/.githooks

set -e

unset CDPATH

IFS='
'

run_php_cs_fixer() {
    php_cs_fixer_bin=

    # Find the PHP Coding Standards fixer script and configuration.
    for base_dir in . ./laravel; do
        php_cs_fixer_bin_candidate="$base_dir/vendor/bin/php-cs-fixer"

        if test -f "$php_cs_fixer_bin_candidate"; then
            php_cs_fixer_bin="$php_cs_fixer_bin_candidate"

            # Local override.
            if test -f "$base_dir/.php-cs-fixer.php"; then
                php_cs_fixer_config="$base_dir/.php-cs-fixer.php"

            # Default.
            elif test -f "$base_dir/.php-cs-fixer.dist.php"; then
                php_cs_fixer_config="$base_dir/.php-cs-fixer.dist.php"

            # Deprecated version 2 local override.
            elif test -f "$base_dir/.php_cs"; then
                php_cs_fixer_config="$base_dir/.php_cs"

            # Deprecated version 2 default.
            elif test -f "$base_dir/.php_cs.dist"; then
                php_cs_fixer_config="$base_dir/.php_cs.dist"
            fi

            break
        fi
    done

    # Only run the cs checks if a PHP Coding Standards fixer could be found.
    if test -z "$php_cs_fixer_bin"; then
        return
    fi

    # Only do a full check if the PHP Coding Standards condiguration or the
    # Composer dependencies lock file has changed, otherwise run a check only
    # for the files that have changed since the last commit.
    changed_files=$(git diff --staged --name-only --diff-filter=ACMRTUXB)

    if ! echo "${changed_files}" | grep -qE "^(laravel/)?(\\.php-cs-fixer(\\.dist)?|composer\\.lock)$"; then
        extra_args=$(printf -- '--path-mode=intersection\n--\n%s' "${changed_files}")
    else
        extra_args=''
    fi

    rerun_with_details() {
        echo >&2 "\033[0;33mCoding guidelines pre-commit check failed.\033[1;0m"
        echo >&2 "\033[0;33mRunning check again in verbose mode ...\033[1;0m"

        "$php_cs_fixer_bin" fix --config="$php_cs_fixer_config"\
            -vvv \
            --dry-run \
            --stop-on-violation \
            --using-cache=no \
            ${extra_args}

        exit 1
    }

    # PHP Coding Standards Fixer is run quitely. If there are errors it is run
    # again in verbose mode to provide more information about which rules and
    # which files are failing the check.
    "$php_cs_fixer_bin" fix \
        --config="$php_cs_fixer_config" \
        -q \
        --dry-run \
        --stop-on-violation \
        --using-cache=no \
        ${extra_args} || rerun_with_details
}

run_php_cs_fixer
